{"ast":null,"code":"const validations = {\n  name: {\n    custom: {\n      isValid: value => isValidString(value),\n      message: 'Digite um nome válido'\n    }\n  },\n  cpf: {\n    custom: {\n      isValid: value => {\n        var _value$replaceAll, _value$replaceAll$rep;\n        return parseInt(value === null || value === void 0 ? void 0 : (_value$replaceAll = value.replaceAll('.', '')) === null || _value$replaceAll === void 0 ? void 0 : (_value$replaceAll$rep = _value$replaceAll.replace('-', '')) === null || _value$replaceAll$rep === void 0 ? void 0 : _value$replaceAll$rep.length, 10) === 11;\n      },\n      message: 'Digite um CPF válido'\n    }\n  },\n  phone: {\n    custom: {\n      isValid: value => parseInt(value === null || value === void 0 ? void 0 : value.length, 10) >= 13,\n      message: 'Digite um telefone válido'\n    }\n  },\n  cep: {\n    custom: {\n      isValid: value => parseInt(value === null || value === void 0 ? void 0 : value.length, 10) === 9,\n      message: 'Digite um CEP válido'\n    }\n  },\n  city: {\n    custom: {\n      isValid: value => isValidString(value),\n      message: 'Digite uma cidade'\n    }\n  },\n  neighborhood: {\n    custom: {\n      isValid: value => isValidString(value),\n      message: 'Digite um bairro'\n    }\n  },\n  street: {\n    custom: {\n      isValid: value => isValidString(value),\n      message: 'Digite uma rua'\n    }\n  },\n  state: {\n    custom: {\n      isValid: value => isValidString(value),\n      message: 'Selecione um estado'\n    }\n  },\n  birthday: {\n    custom: {\n      isValid: value => !value || !isNaN(new Date(value === null || value === void 0 ? void 0 : value.split('-').join('-'))),\n      message: 'Selecione uma data de aniversário'\n    }\n  },\n  number: {\n    custom: {\n      isValid: value => Number(value),\n      message: 'Digite um número válido'\n    }\n  }\n};\nexport default validations;\nfunction isValidString(value) {\n  return value || (value === null || value === void 0 ? void 0 : value.trim());\n}","map":{"version":3,"names":["validations","name","custom","isValid","value","isValidString","message","cpf","parseInt","replaceAll","replace","length","phone","cep","city","neighborhood","street","state","birthday","isNaN","Date","split","join","number","Number","trim"],"sources":["/home/user/Documentos/Driven/Projetos/drivent-frontend/src/components/PersonalInformationForm/FormValidations.js"],"sourcesContent":["const validations = {\r\n  name: {\r\n    custom: {\r\n      isValid: (value) => isValidString(value),\r\n      message: 'Digite um nome válido',\r\n    },\r\n  },\r\n\r\n  cpf: {\r\n    custom: {\r\n      isValid: (value) => parseInt(value?.replaceAll('.', '')?.replace('-', '')?.length, 10) === 11,\r\n      message: 'Digite um CPF válido',\r\n    },\r\n  },\r\n\r\n  phone: {\r\n    custom: {\r\n      isValid: (value) => parseInt(value?.length, 10) >= 13,\r\n      message: 'Digite um telefone válido',\r\n    },\r\n  },\r\n\r\n  cep: {\r\n    custom: {\r\n      isValid: (value) => parseInt(value?.length, 10) === 9,\r\n      message: 'Digite um CEP válido',\r\n    },\r\n  },\r\n\r\n  city: {\r\n    custom: {\r\n      isValid: (value) => isValidString(value),\r\n      message: 'Digite uma cidade',\r\n    },\r\n  },\r\n\r\n  neighborhood: {\r\n    custom: {\r\n      isValid: (value) => isValidString(value),\r\n      message: 'Digite um bairro',\r\n    },\r\n  },\r\n\r\n  street: {\r\n    custom: {\r\n      isValid: (value) => isValidString(value),\r\n      message: 'Digite uma rua',\r\n    },\r\n  },\r\n\r\n  state: {\r\n    custom: {\r\n      isValid: (value) => isValidString(value),\r\n      message: 'Selecione um estado',\r\n    },\r\n  },\r\n\r\n  birthday: {\r\n    custom: {\r\n      isValid: (value) => !value || !isNaN(new Date(value?.split('-').join('-'))),\r\n      message: 'Selecione uma data de aniversário',\r\n    },\r\n  },\r\n\r\n  number: {\r\n    custom: {\r\n      isValid: (value) => Number(value),\r\n      message: 'Digite um número válido',\r\n    },\r\n  },\r\n};\r\n\r\nexport default validations;\r\n\r\nfunction isValidString(value) {\r\n  return value || value?.trim();\r\n}\r\n"],"mappings":"AAAA,MAAMA,WAAW,GAAG;EAClBC,IAAI,EAAE;IACJC,MAAM,EAAE;MACNC,OAAO,EAAGC,KAAK,IAAKC,aAAa,CAACD,KAAK,CAAC;MACxCE,OAAO,EAAE;IACX;EACF,CAAC;EAEDC,GAAG,EAAE;IACHL,MAAM,EAAE;MACNC,OAAO,EAAGC,KAAK;QAAA;QAAA,OAAKI,QAAQ,CAACJ,KAAK,aAALA,KAAK,4CAALA,KAAK,CAAEK,UAAU,CAAC,GAAG,EAAE,EAAE,CAAC,+EAA1B,kBAA4BC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,0DAA5C,sBAA8CC,MAAM,EAAE,EAAE,CAAC,KAAK,EAAE;MAAA;MAC7FL,OAAO,EAAE;IACX;EACF,CAAC;EAEDM,KAAK,EAAE;IACLV,MAAM,EAAE;MACNC,OAAO,EAAGC,KAAK,IAAKI,QAAQ,CAACJ,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEO,MAAM,EAAE,EAAE,CAAC,IAAI,EAAE;MACrDL,OAAO,EAAE;IACX;EACF,CAAC;EAEDO,GAAG,EAAE;IACHX,MAAM,EAAE;MACNC,OAAO,EAAGC,KAAK,IAAKI,QAAQ,CAACJ,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEO,MAAM,EAAE,EAAE,CAAC,KAAK,CAAC;MACrDL,OAAO,EAAE;IACX;EACF,CAAC;EAEDQ,IAAI,EAAE;IACJZ,MAAM,EAAE;MACNC,OAAO,EAAGC,KAAK,IAAKC,aAAa,CAACD,KAAK,CAAC;MACxCE,OAAO,EAAE;IACX;EACF,CAAC;EAEDS,YAAY,EAAE;IACZb,MAAM,EAAE;MACNC,OAAO,EAAGC,KAAK,IAAKC,aAAa,CAACD,KAAK,CAAC;MACxCE,OAAO,EAAE;IACX;EACF,CAAC;EAEDU,MAAM,EAAE;IACNd,MAAM,EAAE;MACNC,OAAO,EAAGC,KAAK,IAAKC,aAAa,CAACD,KAAK,CAAC;MACxCE,OAAO,EAAE;IACX;EACF,CAAC;EAEDW,KAAK,EAAE;IACLf,MAAM,EAAE;MACNC,OAAO,EAAGC,KAAK,IAAKC,aAAa,CAACD,KAAK,CAAC;MACxCE,OAAO,EAAE;IACX;EACF,CAAC;EAEDY,QAAQ,EAAE;IACRhB,MAAM,EAAE;MACNC,OAAO,EAAGC,KAAK,IAAK,CAACA,KAAK,IAAI,CAACe,KAAK,CAAC,IAAIC,IAAI,CAAChB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEiB,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;MAC3EhB,OAAO,EAAE;IACX;EACF,CAAC;EAEDiB,MAAM,EAAE;IACNrB,MAAM,EAAE;MACNC,OAAO,EAAGC,KAAK,IAAKoB,MAAM,CAACpB,KAAK,CAAC;MACjCE,OAAO,EAAE;IACX;EACF;AACF,CAAC;AAED,eAAeN,WAAW;AAE1B,SAASK,aAAa,CAACD,KAAK,EAAE;EAC5B,OAAOA,KAAK,KAAIA,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEqB,IAAI,EAAE;AAC/B"},"metadata":{},"sourceType":"module"}